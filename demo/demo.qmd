.docname {Quarkdown demo}
.docauthor {iamgio}
.doctype {slides}
.theme {darko} layout:{minimal}
.autopagebreak depth:{2}

.footer
    .docauthor

    **.docname**

    [GitHub](https://github.com/iamgio/quarkdown)


.column
    !(_x100)[Quarkdown logo](img/banner.svg)

    Markdown with superpowers

# Versatile

**One source code, many use cases.**
Export your Quarkdown project as:

.function {poweredby}
    credits:
    .text size:{tiny} variant:{smallcaps}
        powered by .credits

- .fragment
      beautiful slides for your next presentation, just like this one.  
      .poweredby {[reveal.js](https://revealjs.com/)}
- .fragment
      a distinguished book.  
      .poweredby {[paged.js](https://pagedjs.org/)}
- .fragment
      a plain document.

.fragment
    *…in just one line, within your code.*

    .row gap:{5mm}
        ```
        .doctype {slides}
        ```
        ```
        .doctype {paged}
        ```
        ```
        .doctype {plain}
        ```

# Same foundations…

Quarkdown's base features follow [**CommonMark**](https://spec.commonmark.org/) and [**GitHub Flavored Markdown**](https://github.github.com/gfm/) specifications,  
so that you'll feel at home typing code you're comfortable typing.

<!-- Shows the source code of a Quarkdown snippet AND its rendered result with an animation -->
.function {animatedsourceresult}
    source:
    .fragment
        ---

        .code {markdown}
            .source
        
    .fragment
        #### ↓
        
        .source

.animatedsourceresult
    ### Diving into _Quarkdown_
    
    Somebody once said:
    > Write once, run **anywhere**.
    
# …brand-new everything

Go ahead to discover Quarkdown's capabilities.

# Functions

Call any function from the extensive [standard library](https://github.com/iamgio/quarkdown/tree/main/stdlib/src/main/kotlin/eu/iamgio/quarkdown/stdlib)
from your Markdown code.

```markdown
.somefunction {argument1} {argument2}
    Body argument
```

.fragment
    Or define your own:
    ```markdown
    .function {greet}
        to from:
        **Hello, .to** from .from!

    .greet {world} from:{Giorgio}
    ```

.fragment
    .text size:{small}
        **Hello, world** from Giorgio!

<!-- Like .animatedsourceresult, but with no animations. -->
.function {sourceresult}
    source:
    ---
    .code {markdown}
        .source
    #### ↓ 
    .source

## Full layout control 

.sourceresult
    .row alignment:{center} gap:{1cm}
        !(150x150)[Quarkdown](img/icon.png)
        
        .column cross:{start}
            .text size:{large} variant:{smallcaps}
                **Quarkdown is on GitHub!**
    
            https://github.com/iamgio/quarkdown

## Multi-file project

.sourceresult
    .include {sources/other.qmd}

.whitespace height:{1cm}

.fragment
    > Functions declared in included files are imported as well.  
    > Use it to your advantage to make awesome libraries!

## File data: code

.sourceresult
    The constructor of the class `Point` is as follows:

    .code {java}
        .read {code/Point.java} lines:{5..8}

## File data: CSV

.sourceresult
    .csv {csv/people.csv}

## Math

.sourceresult
    .var {radius} {8}

    If we try to calculate the **surface** of a circle of **radius .radius**,
    we'll find out it's **.multiply {.pow {.radius} to:{2}} by:{.pi}**

## Scripting {#scripting-basic}

.text size:{small}
    Basic algorithm

.sourceresult
    .row alignment:{spacearound}
        .repeat {10}
            n:
            .if {.iseven {.n}}
                **.n** is even

## Scripting {#scripting-fibonacci}

.text size:{small}
    Fibonacci sequence

.sourceresult
    .var {t1} {0}
    .var {t2} {1}

    .table
        .foreach {0..8}
            n:
            | $ F_{.n} $ |
            |:----------:|
            |    .t1     |
            .var {tmp} {.sum {.t1} {.t2}}
            .var {t1} {.t2}
            .var {t2} {.tmp}

## Document customization

---

.grid columns:{2} gap:{1cm}
    **Metadata**

    ```markdown
    .docname {Quarkdown demo}
    .docauthor {iamgio}
    .doctype {slides}
    .doclang {english}
    ```

    **Layout and aesthetics**

    ```markdown
    .theme {darko} layout:{minimal}
    .pageformat {A4} orientation:{landscape}
    .slides transition:{zoom} speed:{fast}
    ```

    **Fixed content on each page**

    ```markdown
    .footer
        .docauthor
        
        **.docname**
        
        [GitHub](https://github.com/iamgio/quarkdown)
    ```

## Intuitive error handling

.sourceresult
    .sum {3} {x}

    .grid columns:{3} alignment:{right}
        Hello, world!

# Enhanced base Markdown

**Not just functions.**  
The Quarkdown flavor introduces new features to the standard Markdown syntax.

## TeX formulas

.sourceresult
    Let $ F(u) $ be the ***Fourier Transform*** of the function $ f(x) $:
    
    $ F(u) = \int^{+\infty}_{-\infty} f(x) e^{-i 2\pi x} dx $

.poweredby {[MathJax](https://www.mathjax.org/)}

## Image size

.var {sizedimages}
    <!-- 200px width, auto height -->
    !(200x_)[Quarkdown](img/banner.png)
    <!-- 80px height, auto width -->
    !(_x80)[Quarkdown](img/banner.png)
    <!-- 200px width, 100px height -->
    !(200x100)[Quarkdown](img/banner.png)

---

.code {markdown}
    .sizedimages

#### ↓

.row alignment:{center} gap:{1cm}
    .sizedimages

## Labeled image

.sourceresult
    !(150x_)[Quarkdown](https://iamgio.eu/quarkdown/img/icon-light.png "The Quarkdown icon")

## Color preview

.sourceresult
    The color magenta's hexadecimal representation is `#FF00FF`.

# It's a wrap

You've seen the **key features** of Quarkdown — the door to making stunning documents is now open.  

The project is [open source](https://github.com/iamgio/quarkdown), still in development and **open to feedback and contributions**!  
.text size:{small} content:{Just note that while `slides` documents are already stable and usable, `paged` ones are not yet.}

.box
    The **source code** of this presentation is available [**here**](https://github.com/iamgio/quarkdown/tree/main/demo).

Future plans include tutorials, wikis and docs. But for now, happy coding!

.tableofcontents maxdepth:{2}
